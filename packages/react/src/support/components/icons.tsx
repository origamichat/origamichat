import type React from "react";

export type IconVariant = "default" | "filled";

export type IconName =
	| "sidebar"
	| "check"
	| "x"
	| "clipboard"
	| "send"
	| "chevron-down"
	| "arrow-left"
	| "arrow-right"
	| "arrow-up-right"
	| "attachment"
	| "file"
	| "close"
	| "chat";

export interface IconProps {
	name: IconName;
	variant?: IconVariant;
	className?: string;
	filledOnHover?: boolean;
}

// Thanks to Aaon for the icons
const iconRegistry: Record<IconName, Record<IconVariant, string>> = {
	sidebar: {
		default:
			"M9 2L9 22M10 22H14C16.8003 22 18.2004 22 19.27 21.455C20.2108 20.9757 20.9757 20.2108 21.455 19.27C22 18.2004 22 16.8003 22 14V10C22 7.19974 22 5.79961 21.455 4.73005C20.9757 3.78924 20.2108 3.02433 19.27 2.54497C18.2004 2 16.8003 2 14 2H10C7.19974 2 5.79961 2 4.73005 2.54497C3.78924 3.02433 3.02433 3.78924 2.54497 4.73005C2 5.79961 2 7.19974 2 10V14C2 16.8003 2 18.2004 2.54497 19.27C3.02433 20.2108 3.78924 20.9757 4.73005 21.455C5.79961 22 7.19974 22 10 22Z",
		filled:
			"M9.25 2.58333C9.25 2.27334 9.25 2.11835 9.21593 1.99118C9.12346 1.64609 8.85391 1.37654 8.50882 1.28407C8.38165 1.25 8.22666 1.25 7.91667 1.25C6.36671 1.25 5.59174 1.25 4.9559 1.42037C3.23044 1.88271 1.88271 3.23044 1.42037 4.9559C1.25 5.59174 1.25 6.36671 1.25 7.91667V16.0833C1.25 17.6333 1.25 18.4083 1.42037 19.0441C1.88271 20.7696 3.23044 22.1173 4.9559 22.5796C5.59174 22.75 6.36671 22.75 7.91667 22.75C8.22666 22.75 8.38165 22.75 8.50882 22.7159C8.85391 22.6235 9.12346 22.3539 9.21593 22.0088C9.25 21.8817 9.25 21.7267 9.25 21.4167L9.25 2.58333ZM10.75 21.15C10.75 21.7101 10.75 21.9901 10.859 22.204C10.9549 22.3922 11.1078 22.5451 11.296 22.641C11.5099 22.75 11.7899 22.75 12.35 22.75H14.75C17.5503 22.75 18.9504 22.75 20.02 22.205C20.9608 21.7257 21.7257 20.9608 22.205 20.02C22.75 18.9504 22.75 17.5503 22.75 14.75V9.25C22.75 6.44974 22.75 5.04961 22.205 3.98005C21.7257 3.03924 20.9608 2.27433 20.02 1.79497C18.9504 1.25 17.5503 1.25 14.75 1.25H12.35C11.7899 1.25 11.5099 1.25 11.296 1.35899C11.1078 1.45487 10.9549 1.60785 10.859 1.79601C10.75 2.00992 10.75 2.28995 10.75 2.85L10.75 21.15Z",
	},

	clipboard: {
		default:
			"M15.9999 3V3C18.209 3 19.9999 4.79086 19.9999 7V14C19.9999 16.8003 19.9999 18.2004 19.4549 19.27C18.9755 20.2108 18.2106 20.9757 17.2698 21.455C16.2003 22 14.8001 22 11.9999 22V22C9.19962 22 7.79948 22 6.72993 21.455C5.78911 20.9757 5.02421 20.2108 4.54485 19.27C3.99988 18.2004 3.99988 16.8003 3.99988 14V7C3.99988 4.79086 5.79074 3 7.99988 3V3M15.9999 3V3C15.9999 1.89543 15.1044 1 13.9999 1H9.99988C8.89531 1 7.99988 1.89543 7.99988 3V3M15.9999 3V3C15.9999 4.10457 15.1044 5 13.9999 5H9.99988C8.89531 5 7.99988 4.10457 7.99988 3V3",
		filled:
			"M10.136 0.25C8.85118 0.25 7.70111 1.04698 7.24994 2.25C5.0407 2.25 3.24976 4.04094 3.24976 6.25018V14.75C3.24976 17.5503 3.24976 18.9504 3.79472 20.02C4.27409 20.9608 5.03899 21.7257 5.9798 22.205C7.04936 22.75 8.44949 22.75 11.2498 22.75H12.7498C15.55 22.75 16.9501 22.75 18.0197 22.205C18.9605 21.7257 19.7254 20.9608 20.2048 20.02C20.7498 18.9504 20.7498 17.5503 20.7498 14.75V6.24982C20.7498 4.04078 18.959 2.25 16.7499 2.25C16.2988 1.04699 15.1488 0.25 13.864 0.25H10.136ZM9.99994 4.25C9.30958 4.25 8.74994 3.69036 8.74994 3C8.74994 2.30964 9.30958 1.75 9.99994 1.75H13.9999C14.6903 1.75 15.2499 2.30964 15.2499 3C15.2499 3.69036 14.6903 4.25 13.9999 4.25H9.99994Z",
	},
	chat: {
		default:
			"M2 10C2 7.19974 2 5.79961 2.54497 4.73005C3.02433 3.78924 3.78924 3.02433 4.73005 2.54497C5.79961 2 7.19974 2 10 2H14C16.8003 2 18.2004 2 19.27 2.54497C20.2108 3.02433 20.9757 3.78924 21.455 4.73005C22 5.79961 22 7.19974 22 10V19.1708C22 20.1969 22 20.71 21.8373 21.0302C21.5642 21.5676 20.996 21.8893 20.3947 21.847C20.0363 21.8218 19.5964 21.5578 18.7165 21.0299V21.0299C18.1917 20.715 17.9293 20.5576 17.6542 20.4347C17.1972 20.2306 16.7122 20.0962 16.2154 20.0362C15.9163 20 15.6103 20 14.9983 20H10C7.19974 20 5.79961 20 4.73005 19.455C3.78924 18.9757 3.02433 18.2108 2.54497 17.27C2 16.2004 2 14.8003 2 12V10Z",
		filled:
			"M9.25 1.25C6.44974 1.25 5.04961 1.25 3.98005 1.79497C3.03924 2.27433 2.27433 3.03924 1.79497 3.98005C1.25 5.04961 1.25 6.44974 1.25 9.25V12.75C1.25 15.5503 1.25 16.9504 1.79497 18.02C2.27433 18.9608 3.03924 19.7257 3.98005 20.205C5.04961 20.75 6.44974 20.75 9.25 20.75H14.5764C15.4012 20.75 15.8135 20.75 16.2144 20.8156C16.5703 20.8738 16.9189 20.9703 17.254 21.1035C17.6315 21.2535 17.9851 21.4657 18.6924 21.8901L19.1152 22.1438C20.3049 22.8576 20.8998 23.2145 21.3892 23.1689C21.816 23.1291 22.2054 22.9086 22.4591 22.5631C22.75 22.1669 22.75 21.4732 22.75 20.0858V9.25C22.75 6.44974 22.75 5.04961 22.205 3.98005C21.7257 3.03924 20.9608 2.27433 20.02 1.79497C18.9504 1.25 17.5503 1.25 14.75 1.25H9.25Z",
	},
	check: {
		default: "M4 13L9 18L20 6",
		filled: "M4 13L9 18L20 6",
	},
	x: {
		default: "M6 18L18 6M6 6L18 18",
		filled: "M6 18L18 6M6 6L18 18",
	},
	send: {
		default:
			"M11 13L12.5345 16.9899C13.5893 19.7326 14.1168 21.1039 14.825 21.4489C15.4375 21.7472 16.1598 21.7132 16.7415 21.3586C17.4142 20.9486 17.8104 19.5338 18.6027 16.7041L21.466 6.47824C21.9677 4.68672 22.2185 3.79096 21.9857 3.17628C21.7827 2.64035 21.3596 2.21724 20.8237 2.01427C20.209 1.78147 19.3133 2.03228 17.5217 2.53391L7.29584 5.39716C4.46617 6.18947 3.05133 6.58563 2.64136 7.25828C2.28678 7.84005 2.25275 8.56231 2.55106 9.17484C2.89597 9.88306 4.26729 10.4105 7.00993 11.4654L11 13ZM11 13L13.5 10.5",
		filled:
			"M6.88154 12.2191C3.45325 10.9005 1.7391 10.2412 1.30796 9.35595C0.935078 8.59028 0.977616 7.68746 1.42084 6.96024C1.93331 6.11943 3.70185 5.62424 7.23894 4.63385L17.234 1.83523C19.4734 1.2082 20.5931 0.894684 21.3615 1.18568C22.0314 1.43939 22.5603 1.96829 22.814 2.63819C23.1049 3.40654 22.7914 4.52624 22.1644 6.76565L19.3657 16.7606C18.3753 20.2977 17.88 22.0663 17.0392 22.5788C16.312 23.022 15.4092 23.0645 14.6435 22.6916C13.7582 22.2605 13.099 20.5463 11.7804 17.1179L11.0877 15.3166C10.9525 14.9653 10.885 14.7897 10.8813 14.6151C10.878 14.4608 10.9104 14.3078 10.9761 14.1681C11.0504 14.0101 11.1835 13.877 11.4496 13.6109L13.9999 11.0606C14.2928 10.7677 14.2928 10.2928 13.9999 9.99995C13.7071 9.70705 13.2322 9.70705 12.9393 9.99995L10.3891 12.5501C10.123 12.8163 9.98991 12.9493 9.83189 13.0236C9.69221 13.0893 9.53921 13.1218 9.38489 13.1185C9.2103 13.1148 9.03466 13.0472 8.68338 12.9121L6.88154 12.2191Z",
	},
	"chevron-down": {
		default: "M6 9L12 15L18 9",
		filled:
			"M10.8686 14.8686L7.73137 11.7314C6.87462 10.8746 6.44624 10.4462 6.4173 10.0785C6.39218 9.75934 6.52136 9.44749 6.76477 9.23959C7.04529 9 7.65111 9 8.86274 9H15.1373C16.3489 9 16.9547 9 17.2352 9.23959C17.4786 9.44749 17.6078 9.75934 17.5827 10.0785C17.5538 10.4462 17.1254 10.8746 16.2686 11.7314L13.1314 14.8686C12.7354 15.2646 12.5373 15.4627 12.309 15.5368C12.1082 15.6021 11.8918 15.6021 11.691 15.5368C11.4627 15.4627 11.2646 15.2646 10.8686 14.8686Z",
	},
	"arrow-left": {
		default: "M15 19l-7-7 7-7",
		filled: "M15 19l-7-7 7-7",
	},
	"arrow-right": {
		default: "M9 5l7 7-7 7",
		filled: "M9 5l7 7-7 7",
	},
	"arrow-up-right": {
		default: "M15 19l-7-7 7-7",
		filled: "M15 19l-7-7 7-7",
	},
	attachment: {
		default:
			"M22 12L15.25 18.75C12.3505 21.6495 7.64949 21.6495 4.75 18.75V18.75C1.85051 15.8505 1.8505 11.1495 4.75 8.25L9.5 3.5C11.433 1.56701 14.567 1.567 16.5 3.5V3.5C18.433 5.433 18.433 8.567 16.5 10.5L11.75 15.25C10.7835 16.2165 9.2165 16.2165 8.25 15.25V15.25C7.2835 14.2835 7.2835 12.7165 8.25 11.75L13 7",
		filled:
			"M22 12L15.25 18.75C12.3505 21.6495 7.64949 21.6495 4.75 18.75V18.75C1.85051 15.8505 1.8505 11.1495 4.75 8.25L9.5 3.5C11.433 1.56701 14.567 1.567 16.5 3.5V3.5C18.433 5.433 18.433 8.567 16.5 10.5L11.75 15.25C10.7835 16.2165 9.2165 16.2165 8.25 15.25V15.25C7.2835 14.2835 7.2835 12.7165 8.25 11.75L13 7",
	},
	file: {
		default:
			"M14 2.5V4.80003C14 5.92013 14 6.48019 14.218 6.90801C14.4097 7.28433 14.7157 7.5903 15.092 7.78204C15.5198 8.00003 16.0799 8.00003 17.2 8.00003H19.5M20 10.3137V14C20 16.8003 20 18.2004 19.455 19.27C18.9757 20.2108 18.2108 20.9757 17.27 21.455C16.2004 22 14.8003 22 12 22V22C9.19974 22 7.79961 22 6.73005 21.455C5.78924 20.9757 5.02433 20.2108 4.54497 19.27C4 18.2004 4 16.8003 4 14V9.77817C4 7.18697 4 5.89136 4.46859 4.88663C4.96536 3.82147 5.82147 2.96536 6.88663 2.46859C7.89136 2 9.18697 2 11.7782 2V2C12.9105 2 13.4766 2 14.0113 2.11855C14.5806 2.24479 15.1235 2.46965 15.6153 2.78296C16.0772 3.07721 16.4775 3.47753 17.2782 4.27817L17.6569 4.65685C18.5216 5.52161 18.954 5.95399 19.2632 6.45858C19.5373 6.90594 19.7394 7.39366 19.8618 7.90384C20 8.47928 20 9.09076 20 10.3137Z",
		filled:
			"M13.25 1.26002C12.9109 1.24999 12.5071 1.24999 11.997 1.24999H11.25C8.44974 1.24999 7.04961 1.24999 5.98005 1.79495C5.03924 2.27432 4.27433 3.03922 3.79497 3.98003C3.25 5.04959 3.25 6.44972 3.25 9.24999V14.75C3.25 17.5502 3.25 18.9504 3.79497 20.0199C4.27433 20.9608 5.03924 21.7257 5.98005 22.205C7.04961 22.75 8.44974 22.75 11.25 22.75H12.75C15.5503 22.75 16.9504 22.75 18.02 22.205C18.9608 21.7257 19.7257 20.9608 20.205 20.0199C20.75 18.9504 20.75 17.5503 20.75 14.75V10.003C20.75 9.49287 20.75 9.08912 20.74 8.75H17.2H17.1695H17.1695C16.6354 8.75001 16.1896 8.75002 15.8253 8.72026C15.4454 8.68922 15.0888 8.62211 14.7515 8.45027C14.2341 8.18662 13.8134 7.76592 13.5497 7.24847C13.3779 6.91121 13.3108 6.55455 13.2797 6.17467C13.25 5.81044 13.25 5.36459 13.25 4.83043V4.8V1.26002ZM20.5164 7.25C20.3941 6.86401 20.2252 6.49389 20.0132 6.1479C19.704 5.64332 19.2716 5.21094 18.4069 4.3462L18.4069 4.34618L17.6538 3.59313L17.6538 3.59313C16.789 2.72837 16.3567 2.29599 15.8521 1.98679C15.5061 1.77477 15.136 1.60589 14.75 1.48358V4.8C14.75 5.37243 14.7506 5.75664 14.7748 6.05252C14.7982 6.33965 14.8401 6.47693 14.8862 6.56749C15.0061 6.80269 15.1973 6.99392 15.4325 7.11376C15.5231 7.1599 15.6604 7.20178 15.9475 7.22524C16.2434 7.24942 16.6276 7.25 17.2 7.25H20.5164Z",
	},
	close: {
		default: "M6 18L18 6M6 6L18 18",
		filled: "M6 18L18 6M6 6L18 18",
	},
};

const getIconPath = (name: IconName, variant: IconVariant): string => {
	return iconRegistry[name]?.[variant] || iconRegistry[name]?.default || "";
};

const getIconType = (variant: IconVariant) => {
	return variant === "filled" ? "filled" : "stroked";
};

export const Icon: React.FC<IconProps> = ({
	name,
	variant = "default",
	className,
	filledOnHover,
}) => {
	const defaultPath = getIconPath(name, "default");
	const filledPath = getIconPath(name, "filled");
	const currentPath = getIconPath(name, variant);
	const iconType = getIconType(variant);

	if (!currentPath) {
		return null;
	}

	// If filledOnHover is true, render both variants with CSS-only hover
	if (filledOnHover && defaultPath && filledPath) {
		return (
			<span
				className={`relative inline-block shrink-0 ${className || "h-4 w-4"}`}
			>
				<svg
					className="absolute inset-0 h-full w-full opacity-100 transition-opacity duration-200 group-hover:opacity-0"
					fill="none"
					height="24"
					viewBox="0 0 24 24"
					width="24"
					xmlns="http://www.w3.org/2000/svg"
				>
					<title>{name}</title>
					<path
						d={defaultPath}
						stroke="currentColor"
						strokeLinecap="round"
						strokeLinejoin="round"
						strokeWidth="1.5"
					/>
				</svg>
				<svg
					className="absolute inset-0 h-full w-full opacity-0 transition-opacity duration-200 group-hover:opacity-100"
					fill="none"
					height="24"
					viewBox="0 0 24 24"
					width="24"
					xmlns="http://www.w3.org/2000/svg"
				>
					<title>{name}</title>
					<path
						clipRule="evenodd"
						d={filledPath}
						fill="currentColor"
						fillRule="evenodd"
					/>
				</svg>
			</span>
		);
	}

	// Standard rendering for non-hover variants
	return (
		<svg
			className={`inline-block shrink-0 ${className || "h-4 w-4"}`}
			fill="none"
			height="24"
			viewBox="0 0 24 24"
			width="24"
			xmlns="http://www.w3.org/2000/svg"
		>
			<title>{name}</title>
			{iconType === "filled" ? (
				<path
					clipRule="evenodd"
					d={currentPath}
					fill="currentColor"
					fillRule="evenodd"
				/>
			) : (
				<path
					d={currentPath}
					stroke="currentColor"
					strokeLinecap="round"
					strokeLinejoin="round"
					strokeWidth="1.5"
				/>
			)}
		</svg>
	);
};

export type AddNewIconTemplate = {
	[key: string]: {
		default: string;
		filled: string;
	};
};

export default Icon;
